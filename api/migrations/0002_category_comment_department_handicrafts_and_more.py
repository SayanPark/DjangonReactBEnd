# Generated by Django 5.2 on 2025-04-18 17:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('comment', models.TextField(blank=True, null=True)),
                ('reply', models.TextField(blank=True, null=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('is_admin_reply', models.BooleanField(default=False, help_text='Indicates if this comment is an admin reply')),
                ('is_removed', models.BooleanField(default=False, help_text='Indicates if this comment has been removed by admin')),
            ],
            options={
                'verbose_name_plural': 'Comment',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
                ('persian_name', models.CharField(blank=True, help_text='Persian name', max_length=150, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Handicrafts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Handicrafts', max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='profile',
            name='about',
        ),
        migrations.RemoveField(
            model_name='profile',
            name='bio',
        ),
        migrations.AddField(
            model_name='profile',
            name='comments',
            field=models.ManyToManyField(blank=True, related_name='commenting_profiles', to='api.comment'),
        ),
        migrations.CreateModel(
            name='CreativeIndustriesBlogDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='creative_industries_blog', to='api.department')),
            ],
        ),
        migrations.CreateModel(
            name='AgriculturalIndustriesDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='agricultural_industries', to='api.department')),
            ],
        ),
        migrations.CreateModel(
            name='FashionAndClothingBlogDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='fashion_clothing_blog', to='api.department')),
            ],
        ),
        migrations.CreateModel(
            name='FoodIndustriesBlogDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='food_industries_blog', to='api.department')),
            ],
        ),
        migrations.CreateModel(
            name='ClothingCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('persian_name', models.CharField(blank=True, help_text='Persian name', max_length=100, null=True)),
                ('handicraft', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clothing_categories', to='api.handicrafts')),
            ],
        ),
        migrations.CreateModel(
            name='HandicraftsBlogDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='handicrafts_blog', to='api.department')),
            ],
        ),
        migrations.CreateModel(
            name='HealthBlogDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='health_blog', to='api.department')),
            ],
        ),
        migrations.CreateModel(
            name='InternationalBlogDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='international_blog', to='api.department')),
            ],
        ),
        migrations.CreateModel(
            name='MaterialType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('persian_name', models.CharField(blank=True, help_text='Persian name', max_length=100, null=True)),
                ('handicraft', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='material_types', to='api.handicrafts')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('like', 'Like'), ('comment', 'Comment'), ('bookmark', 'Bookmark')])),
                ('seen', models.BooleanField(default=False)),
                ('date', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Notification',
                'ordering': ['-date'],
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='notifications',
            field=models.ManyToManyField(blank=True, related_name='notified_profiles', to='api.notification'),
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='image')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Draft', 'Draft'), ('Disabled', 'Disabled')], default='Active', max_length=100)),
                ('view', models.IntegerField(default=0)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('is_product', models.BooleanField(default=False, help_text='Indicates if this post is a product')),
                ('product_count', models.PositiveIntegerField(default=0, help_text='Available quantity of the product')),
                ('price', models.DecimalField(blank=True, decimal_places=2, help_text='Original price of the product', max_digits=10, null=True)),
                ('discount_percent', models.PositiveIntegerField(default=0, help_text='Discount percentage for the product')),
                ('discounted_price', models.DecimalField(blank=True, decimal_places=2, help_text='Price after discount', max_digits=10, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.category')),
                ('likes', models.ManyToManyField(blank=True, related_name='likes_user', to=settings.AUTH_USER_MODEL)),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.profile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Post',
                'ordering': ['-date'],
            },
        ),
        migrations.AddField(
            model_name='notification',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='api.post'),
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='api.post'),
        ),
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.profile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to='api.post')),
            ],
            options={
                'verbose_name_plural': 'Bookmark',
                'ordering': ['-date'],
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='bookmarks',
            field=models.ManyToManyField(related_name='bookmarked_by', through='api.Bookmark', to='api.post'),
        ),
        migrations.AddField(
            model_name='profile',
            name='liked_posts',
            field=models.ManyToManyField(blank=True, related_name='liked_by_profiles', to='api.post'),
        ),
        migrations.AddField(
            model_name='handicrafts',
            name='product_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='handicrafts', to='api.productcategory'),
        ),
        migrations.CreateModel(
            name='FoodIndustryCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('persian_name', models.CharField(blank=True, help_text='Persian name', max_length=100, null=True)),
                ('product_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='food_industries', to='api.productcategory')),
            ],
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('persian_name', models.CharField(blank=True, help_text='Persian name', max_length=100, null=True)),
                ('handicraft', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_types', to='api.handicrafts')),
            ],
        ),
        migrations.CreateModel(
            name='SmartCityBlogDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='smart_city_blog', to='api.department')),
            ],
        ),
        migrations.CreateModel(
            name='SocialResponsibilityDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='social_responsibility', to='api.department')),
            ],
        ),
        migrations.CreateModel(
            name='Technique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('persian_name', models.CharField(blank=True, help_text='Persian name', max_length=100, null=True)),
                ('handicraft', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='techniques', to='api.handicrafts')),
            ],
        ),
    ]
